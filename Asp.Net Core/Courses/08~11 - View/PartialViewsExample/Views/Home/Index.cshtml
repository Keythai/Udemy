<h1>Home</h1>

@{
    ListModel listModel = new ListModel();
    listModel.ListTitle = "Countries";
    listModel.ListItems = new List<string>()
            {
                "USA",
                "Canada",
                "Japan",
                "Germany",
                "India"
            };
}
@*
    ViewData["ListTitle"] = "Cities";
            ViewData["ListItems"] = new List<string>()
            {
                "Paris",
                "New York",
                "New Mumbai",
                "Rome"
            };
*@
<!--How to apply partial view-->
    <partial name="_ListPartialView" model="listModel">@*<< model passes the value as model to other views*@
        </partial>
@{ @*<< this updates the partial view afterwards*@
    var myViewData = new ViewDataDictionary(ViewData);
    myViewData["ListTitle"] = "Countries";
    myViewData["ListItems"] = new List<string>()
            {
                "USA",
                "Canada",
                "Japan",
                "Germany",
                "India"
            };
}
<div class="box">
    <partial name="_ListPartialView" view-data="myViewData" model="listModel"></partial>
</div>

<h3>ListTitle in View: @ViewData["ListTitle"]</h3> @*only this prints Countries, because the ListTitle only changes in PartialView, not in Index View*@

<h1>Programming Languages</h1>

<button class="button button-blue-back" type="button" id="button-load">Load Programming Languages</button>

<div class="box programming-languages-content">
</div>
<script>
    document.querySelector("#button-load").addEventListener("click", async function(){
        var response = await fetch("programming-languages");
        var languages = await response.text();
        document.querySelector(".programming-languages-content").innerHTML = languages;
    });
</script>