// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderAPI.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal");

                    b.HasKey("OrderId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("f4816224-70d6-4491-ac52-34f298ace16f"),
                            CustomerName = "John Doe",
                            OrderDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD001",
                            TotalAmount = 66.5m
                        },
                        new
                        {
                            OrderId = new Guid("735886c0-faf3-49ca-9776-8a20b756f1cb"),
                            CustomerName = "Jane Smith",
                            OrderDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD002",
                            TotalAmount = 225.8m
                        });
                });

            modelBuilder.Entity("OrderAPI.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems", (string)null);

                    b.HasData(
                        new
                        {
                            OrderItemId = new Guid("d20882df-7fca-4ee8-88bb-37d2fc75e63f"),
                            OrderId = new Guid("f4816224-70d6-4491-ac52-34f298ace16f"),
                            ProductName = "Product A",
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = new Guid("2e27b6a4-469d-4d7f-8b8b-54af129675fd"),
                            OrderId = new Guid("f4816224-70d6-4491-ac52-34f298ace16f"),
                            ProductName = "Product B",
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = new Guid("24d71ac2-0a9c-4914-9fd3-13bc25d42694"),
                            OrderId = new Guid("735886c0-faf3-49ca-9776-8a20b756f1cb"),
                            ProductName = "Product C",
                            Quantity = 7
                        },
                        new
                        {
                            OrderItemId = new Guid("ac90b8bc-349d-43fd-87a6-6a7ed8057697"),
                            OrderId = new Guid("735886c0-faf3-49ca-9776-8a20b756f1cb"),
                            ProductName = "Product D",
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("OrderAPI.Models.OrderItem", b =>
                {
                    b.HasOne("OrderAPI.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderAPI.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
